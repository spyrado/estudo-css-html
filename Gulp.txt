/***** O que é GULP? *****/

    GULP é um automatizador de tarefas para front end.


https://gulpjs.com/

----------- HTTP ARCHIVE -----------

    https://httparchive.org/ ->  O HTTP Archive rastreia como a Web é criada.


----------- IMAGEM TEM UM PESO? -----------
    Sim, em um web site, toda imagem tem seu peso, é importante minificalas com programas
    ou recursos web, exemplo:
        Aplicativo Desk para minificar imagens: ImageOptim
        Pagina web para minificar imagens: https://tinypng.com/

    Dependendo do site eles só minificam um tipo de extensão, procure pela extensao
        sua extensao desejada...(.png, .jpeg, .svg e etc)

----------- INSTALANDO GULP -----------

npm init -> instala o package.json (caso voce já tenha o package n é necessário instala-lo )
    de enter para todas as perguntas e YES no final.’

    --- Porque é necessário instalar o package.json? ---

        Porque é lá que ficara listado todas as dependencias do seu projeto,
        em package.json:
        "devDependencies": {
            "gulp": "^3.9.0"
        }

        e se for necessário futuramente configurar todas as dependencias NOVAMENTE,
        é só excluir a pasta node_modules e dar
            npm install
        que o package.json identifica TODAS AS DEPENDENCIAS e baixa pra voce..
        isso facilita e MUITO a vida.

Após dar um init, instale de fato o gulp
    npm install gulp@3.9.0 --save-dev

Após instalar, para iniciar o gulp configure no package.json a chamada dele,
    vá em scripts e adicione esse script:
        "scripts": {
            "gulp": "gulp"
        },
    Ficará assim:
        "scripts": {
            "test": "echo \"Error: no test specified\" && exit 1",
            "gulp": "gulp"
        },
Agora sim podemos iniciar o gulp:
    npm run gulp
Vai gerar um erro: No gulpfile found
    Vamos ter que criar o arquivo gulpfile.js NA RAIZ DO PROJETO.
Ele vai gerar outro erro: Task 'default' is not in your gulpfile
    Isso é porque nosso gulpfile.js não está programado para executar nenhuma tarefa.

----------- CONFIGURANDO GULPFILE.JS -----------

Para começarmos a usar o Gulp, temos que importar o gulp, para começar a utiliza-lo
    dentro do arquivo gulpfile.js, então.. lá no arquivo gulpfile.js vamos importar
    o Gulp:
        var gulp = require('gulp'); -> o nome gulp é o nome da pasta que 
            está em node_modules, se fosse gulp-antigo, voce colocaria no require
            require('gulp-antigo').
Feito isso temos nosso Objeto gulp criado, e podemos trabalhar em cima dele agora.

    -- Configurando gulp-imagemin no gulpfile.js --

Vá até o arquivo gulpfile.js, e inclua a chamada para o imagemin:
    var gulp = require('gulp'),
    imagemin = require('gulp-imagemin');

----------- TRABALHANDO COM GULP -----------

Após seguir os passos de instalação/configuração.. 
    voce DEVE TER O objeto gulp criado já, então vamos começar a trabalhar com ele.

gulp.src('caminhoPasta') -> indica o caminho de origem para trabalhar.

???? -> porem entre o src e o dest, tem que ter um plugin para modificar 
    os itens do SRC, e jogar no DEST
    Vamos utilizar o plugin gulp-imagemin
        npm install gulp-imagemin@2.3.0 --save-dev
    ver como configura-lo em "Configurando gulp-imagemin no gulpfile.js"

Feito isso.. agora seu codigo vai ficar assim:
    gulp.src('caminhoPasta')
        .pipe(imagemin());

gulp.dest('caminhoPasta') -> grava os dados trabalhados no caminho indicado de destino.


---- PORQUE PIPE? ----
    Pipe faz a ligação dos plugins com a origem e destino (src e dest),
    o código ficaria assim:
         gulp.src('caminhoPasta')
        .pipe(imagemin())
        .pipe(gulp.dest('caminhoPasta'));
    Nesse trecho eu estou falando o seguinte.. pega os arquivos do caminho X,
    dou um pipe(tubo) para ele saber por onde deve passar.. ai eu falo..
    dentro do pipe(tubo) vc vai primeiro passar pelo meu plugin de otimizacao de imagens
    e depois eu dou um pipe novamente e falo pra onde essas imagens já otimizadas vão..


Então.. criamos nossa task(tarefa) para que o gulp consiga identificar
qual tarefa ele deve rodar:

    gulp.task('nomeTask',function(){
        gulp.src('src/img')  <-- tarefas que essa task irá executar..
            .pipe(imagemin())
            .pipe(gulp.dest('src/img'));
    });

feito isso chamamos nossa task via:
    npm run gulp nomeTask

Porem vai minificar 0 arquivos.. pois estamos pedindo pra minificar
    'imagem da pasta img, e n os seus arquivos.

Para conseguir minificar todos os arquivos de todas as pastas que estão em img,
    fazemos o seguinte, utilizamos um padrão chamado de.. GLOB PATTERN, ficaria assim:
        gulp.src('src/img/**/*').
    ** -> TODOS OS DIRETORIOS
    * -> TODOS OS ARQUIVOS DENTRO DOS DIRETORIOS



    --- GLOB PATTERN ---
        In computer programming, glob patterns specify sets of filenames with wildcard
        characters. For example, the Unix command mv *.txt textfiles/ moves (mv) all files 
        with names ending in .txt from the current directory to the directory textfiles. 
        Here, * is a wildcard standing for "any string of characters" and *.txt is a 
        glob pattern. The other common wildcard is the question mark (?), which stands 
        for one character.
**************************** RxJS ****************************

--- Subject ---

A classe Subject serve para que a gente se INSCREVA, para saber qual há uma atualização e reagir a elas,
    funciona mais o menos como se inscrever no canal do YouTube.
    EXEMPLO:

    debounce: Subject<string> = new Subject<string>();

    debounce.next('Nicolas'); // valor de entrada
    debounce.subscribe(nome => console.log(nome)); // Nicolas

--- OPERATORS ---

finalize() -> idependente se o subscribe der certo ou errado ele vai executar a instrucao q voce passar.
switchMap() -> Para de ouvir a funcao anterior e faz algo..
firts() -> emite o ultimo valor recebido.
debounceTime() -> da um delay de tantos milissegundos para executar a proxima acao
tap() -> faz algo antes de enviar os dados.
map() -> transforma o valor recibido, para o desejado. igual o map do javascript
flatMap() -> "mergea os observables"
    exemplo:
        const Rx = require('rxjs');

        const long$ = Rx.Observable.interval(1000).take(4);
        const short$ = Rx.Observable.interval(500).take(4);

        long$
        .flatMap(long => short$.map(short => console.log({ long, short })))
        .subscribe(); 

        /** Output
        { long: 0, short: 0 }
        { long: 0, short: 1 }
Transforma em um unico.